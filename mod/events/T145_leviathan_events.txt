# NOTE: ADF overrode leviathans.3103, but only changed the spawned ship design.

namespace = leviathans

# Dreadnought Rebuilt
ship_event = {
	id = leviathans.3103
	title = "leviathans.3103"
	desc = {
		trigger = { owner = { NOT = { has_authority = auth_machine_intelligence } } }
		text = leviathans.3103.desc
	}
	desc = {
		trigger = { owner = { has_authority = auth_machine_intelligence } }
		text = leviathans.3103.desc.mach
	}
	picture = GFX_evt_automated_dreadnought
	show_sound = event_construction
	location = event_target:guardians_dreadnought_system

	is_triggered_only = yes

	immediate = {
		owner = {
			save_event_target_as = project_owner
			set_country_flag = restored_dreadnought
		}
	}

	option = {
		name = "leviathans.3103.a"

		# Psi Jump Dreadnought if owner has it
		if = {
			limit = {
				owner = { has_technology = "tech_psi_jump_drive_1" }
			}
			create_fleet = {
				name = "NAME_Dreadnought"
				effect = {
					set_owner = event_target:project_owner
					create_ship = {
						name = random
						design = "NAME_Restored_Psi_Dreadnought"
						graphical_culture = "npf_01"
						upgradable = no
					}
					set_location = {
						target = event_target:disabled_dreadnought_object
						distance = 0
						angle = random
					}
				}
			}
			hidden_effect = {
				event_target:disabled_dreadnought_object = { destroy_ambient_object = this }
				solar_system = {
					random_system_ambient_object = {
						limit = { has_ambient_object_flag = dreadnought_debris }
						destroy_ambient_object = this
					}
				}
			}
			break = yes
		}
		# Jump Dreadnought if owner has it
		create_fleet = {
			name = "NAME_Dreadnought"
			effect = {
				set_owner = event_target:project_owner
				create_ship = {
					name = random
					design = "NAME_Restored_Dreadnought"
					graphical_culture = "npf_01"
					upgradable = no
				}
				set_location = {
					target = event_target:disabled_dreadnought_object
					distance = 0
					angle = random
				}
			}
		}
		hidden_effect = {
			event_target:disabled_dreadnought_object = { destroy_ambient_object = this }
			solar_system = {
				random_system_ambient_object = {
					limit = { has_ambient_object_flag = dreadnought_debris }
					destroy_ambient_object = this
				}
			}
		}
		break = yes
	}
}
