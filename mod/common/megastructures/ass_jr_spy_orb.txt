@phase_0_entity_x = -15
@phase_0_entity_y = -5
@entity_x = -15
@entity_y = -15

# Ruined Sentry Array
spy_orb_ruined = {
	entity = "spy_orb_destroyed_entity"
	portrait = "GFX_megastructure_construction_background"

	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }

	resources = {
		category = megastructures

		# Just keeping the structure stable makes
		# it similar in cost to Phase 0.
		upkeep = {
			energy = 5
		}
	}

	potential = {
		always = no
	}
}

# Ruined Sentry Array
spy_orb_ruined = {
	entity = "spy_orb_destroyed_entity"
	portrait = "GFX_megastructure_construction_background"

	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }

	resources = {
		category = megastructures

		# Just keeping the structure stable makes
		# it similar in cost to Phase 0.
		upkeep = {
			energy = 5
		}
	}

	potential = {
		always = no
	}
}

spy_orb_jury_rig = {
	entity = "spy_orb_destroyed_entity"
	construction_entity = "spyorb_phase_04_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @phase_0_entity_x y = @phase_0_entity_y }
	build_time = 600

	resources = {
		category = megastructures
		cost = {
			alloys = 1500
		}

		upkeep = {
			energy = 30
		}
	}

	possible = {
		from = {
			has_technology = tech_starbase_3  # requires Starholds (>< Starbase) to be available
			has_technology = tech_sensors_3   # requires Subspace (tech 3) Sensors to be available
		}
	}

	upgrade_from = {
		spy_orb_ruined
	}

	sensor_range = 13
	hyperlane_range = 20

	country_modifier = {
		add_base_country_intel = 5
	}

	on_build_start = {
		fromfrom = {
			set_graphical_culture = root.from
		}
	}
	on_build_cancel = {}
	on_build_complete = {
		set_star_flag = spy_orb_built
		# BUGFIX: Be sure the planet knows it has a megastructure.
		fromfrom.planet = {
			set_planet_flag = has_megastructure
		}
		from = {
			if = {
				limit = {
					AND = {
						has_relic = r_contingency_core
						has_country_flag = built_spyorb
					}
				}
				set_country_flag = built_spyorb_contingency
			}
			set_country_flag = built_spyorb
		}
	}
}

# Restored Sentry Array
spy_orb_restored = {
	entity = "spyorb_phase_04_entity"
	construction_entity = "spyorb_phase_04_construction_entity"
	portrait = "GFX_megastructure_spy_orb_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }
	build_time = 4800
	resources = {
		category = megastructures
		cost = {
			alloys = 15000
			unity = 3500
		}

		upkeep = {
			energy = 100
		}
	}

	upgrade_from = {
		spy_orb_ruined
		spy_orb_jury_rig # CUSTOM
	}

	possible = {
		from = {
			has_technology = tech_mega_engineering
		}
	}

	on_build_start = {
		fromfrom = {
			set_graphical_culture = root.from
		}
	}

	on_build_complete = {
		# BUGFIX: This is in case we go from ruined to restored.
		if = {
			limit = {
				NOT = {
					has_star_flag = spy_orb_built
				}
			}
			set_star_flag = spy_orb_built
		}
		fromfrom.planet = {
			if = {
				limit = {
					NOT = {
						has_planet_flag = has_megastructure
					}
				}
				set_planet_flag = has_megastructure
			}
		}
		every_system_ambient_object = {
			limit = {
				OR = {
					is_ambient_object_type = large_debris_object
					is_ambient_object_type = medium_debris_01_object
					is_ambient_object_type = medium_debris_02_object
					is_ambient_object_type = small_debris_object
				}
			}
			destroy_ambient_object = this
		}
		from = {
			# BUGFIX: This is in case we go from ruined to restored.
			if = { # This check needs to be first so we can tell if this is our second sentry array.
				limit = {
					AND = {
						has_relic = r_contingency_core
						has_country_flag = built_spyorb
						NOT = {
							has_country_flag = built_spyorb_contingency
						}
					}
				}
				set_country_flag = built_spyorb_contingency
			}
			else = {
				if = {
					limit = {
						NOT = {
							has_country_flag = built_spyorb
						}
					}
					set_country_flag = built_spyorb
				}
			}
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = utopia.2015 }
		}
	}

	country_modifier = {
		add_base_country_intel = 40
	}
}
